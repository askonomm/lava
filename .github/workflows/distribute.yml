# This is a basic workflow to help you get started with Actions

name: Distribute

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-jar:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: 'Build JAR'
        run: |
          mvn package
          
      - name: 'Change name of JAR'
        run: |
          mv target/bloggo-LATEST.jar target/bloggo-${{ github.run_number }}.jar
      - name: 'Publish JAR'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'bloggo-${{ github.run_number }}.jar'
          path: target/bloggo-${{ github.run_number }}.jar
          
      - name: 'Create Release'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            This release is created automatically every time a commit is made to the master branch.
          draft: false
          prerelease: false
          
      - name: 'Upload Release Asset'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: target/bloggo-${{ github.run_number }}.jar
          asset_name: bloggo-${{ github.run_number }}.jar
          asset_content_type: application/java-archive
          
      - name: 'Write Upload URL To File'
        run: |
          echo "${{steps.create_release.outputs.upload_url}}" > upload_url.txt

      - name: 'Publish Upload URL'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'upload_url.txt'
          path: 'upload_url.txt'
          
  build-linux-image:
    needs: [build-jar]
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm-version: '21.0.0.2.java11'

      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image
          
      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'bloggo-${{ github.run_number }}.jar'

      - name: 'Download Release URL'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'upload_url.txt'

      - name: 'Set Upload URL Env Var'
        run: |
          echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV
          
      - name: 'Build Linux Image'
        run: |
          native-image --initialize-at-run-time=io.methvin.watchservice.jna.CarbonAPI --report-unsupported-elements-at-runtime --initialize-at-build-time --no-server --no-fallback -jar bloggo-${{ github.run_number }}.jar
          
      - name: 'Publish Linux Image'
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'bloggo-${{ github.run_number }}-linux'
          path: 'bloggo-${{ github.run_number }}'

      - name: 'Upload Linux Image Asset'
        if: success()
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_name: 'bloggo-${{ github.run_number }}-linux'
          asset_path: 'bloggo-${{ github.run_number }}'
          asset_content_type: application/octet-stream
          
  build-macos-image:
    needs: [build-jar]
    runs-on: macOS-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm-version: '21.0.0.2.java11'
      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image
      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'bloggo-${{ github.run_number }}.jar'

      - name: 'Download Release URL'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'upload_url.txt'

      - name: 'Set Upload URL Env Var'
        run: |
          echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV
      - name: 'Build Mac OS Image'
        run: |
          native-image --initialize-at-run-time=io.methvin.watchservice.jna.CarbonAPI --report-unsupported-elements-at-runtime --initialize-at-build-time --no-server --no-fallback -jar bloggo-${{ github.run_number }}.jar
      - name: 'Publish Mac OS Image'
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'bloggo-${{ github.run_number }}-macOS'
          path: 'bloggo-${{ github.run_number }}'
      - name: 'Upload Mac OS Image Asset'
        if: success()
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_name: 'bloggo-${{ github.run_number }}-macOS'
          asset_path: 'bloggo-${{ github.run_number }}'
          asset_content_type: application/octet-stream

  build-windows-image:
    needs: [build-jar]
    runs-on: windows-2016
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v1
      - name: 'Download GraalVM'
        run: |
          Invoke-RestMethod -Uri https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.0.0.2/graalvm-ce-java11-windows-amd64-21.0.0.2.zip -OutFile 'graal.zip'
      - name: 'Install GraalVM'
        run: |
          Expand-Archive -path 'graal.zip' -destinationpath '.'
      - name: 'Install Native Image'
        run: |
          graalvm-ce-java11-21.0.0.2\bin\gu.cmd install native-image
      - name: 'Set up Visual C Build Tools Workload for Visual Studio 2017 Build Tools'
        run: |
          choco install visualstudio2017-workload-vctools
        shell: bash
      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'bloggo-${{ github.run_number }}.jar'
      - name: 'Build Native Image'
        shell: cmd
        env:
          JAVA_HOME: ./graalvm-ce-java11-21.0.0.2
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
          ./graalvm-ce-java11-21.0.0.2/bin/native-image --no-server --no-fallback -H:Name=blogger -jar bloggo-${{ github.run_number }}.jar
      - name: 'Get Release URL'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'upload_url.txt'
      - name: 'Get Upload URL'
        run: |
          echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV
        shell: bash
      - name: 'Publish Windows Image'
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'bloggo-${{ github.run_number }}-windows.exe'
          path: 'bloggo-${{ github.run_number }}.exe'
      - name: 'Release Windows Image Asset'
        if: success()
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{env.UPLOAD_URL}}
          asset_name: 'bloggo-${{ github.run_number }}-windows.exe'
          asset_path: 'bloggo-${{ github.run_number }}.exe'
          asset_content_type: application/octet-stream
